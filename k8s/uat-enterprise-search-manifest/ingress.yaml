apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kroolo-es-ingress-ustage01
  namespace: fe-es-search-ustage01
  labels:
    app: kroolo-es-ustage01
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS13-1-2-2021-06"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:315855795699:certificate/a8d77004-abe7-45b8-92d3-0ed7e56524d8
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    #alb.ingress.kubernetes.io/inbound-cidrs: 18.224.235.147/32
    #alb.ingress.kubernetes.io/actions.my-action-1: '{"Type": "forward", "ForwardConfig": {"TargetGroups": [{"TargetGroupArn": "arn:aws:elasticloadbalancing:us-east-2:315855795699:targetgroup/k8s-krooloco-krooloco-b33688274e/415a6a923fee2d09", "Weight": 1}]}}'

spec:
  rules:
  - host: ustage01-search.kroolo.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fe-es-service-ustage01
            port:
              number: 80
